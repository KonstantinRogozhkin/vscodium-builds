#!/bin/bash

# –°–∫—Ä–∏–ø—Ç –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è workflow –ª–æ–∫–∞–ª—å–Ω–æ
# –ò—Å–ø–æ–ª—å–∑—É–µ—Ç act –¥–ª—è –∑–∞–ø—É—Å–∫–∞ GitHub Actions –ª–æ–∫–∞–ª—å–Ω–æ

set -e

echo "üöÄ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ VSCodium GitHub Actions workflows"
echo "================================================"

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ act
if ! command -v act &> /dev/null; then
    echo "‚ùå act –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –µ–≥–æ:"
    echo "   brew install act"
    echo "   –∏–ª–∏ —Å–∫–∞—á–∞–π—Ç–µ —Å https://github.com/nektos/act"
    exit 1
fi

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ Docker
if ! command -v docker &> /dev/null; then
    echo "‚ùå Docker –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ Docker Desktop"
    exit 1
fi

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–∫–∞–∑–∞ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö workflows
show_workflows() {
    echo "üìã –î–æ—Å—Ç—É–ø–Ω—ã–µ workflows:"
    echo "1. build-windows - –°–±–æ—Ä–∫–∞ –¥–ª—è Windows"
    echo "2. manual-build - –£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω–∞—è —Å–±–æ—Ä–∫–∞"
    echo "3. list - –ü–æ–∫–∞–∑–∞—Ç—å –≤—Å–µ workflows"
    echo "4. exit - –í—ã—Ö–æ–¥"
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–ø—É—Å–∫–∞ build-windows workflow
run_build_windows() {
    echo "üèóÔ∏è  –ó–∞–ø—É—Å–∫ build-windows workflow..."
    echo "‚ö†Ô∏è  –í–Ω–∏–º–∞–Ω–∏–µ: —ç—Ç–æ –º–æ–∂–µ—Ç –∑–∞–Ω—è—Ç—å –º–Ω–æ–≥–æ –≤—Ä–µ–º–µ–Ω–∏ –∏ —Ä–µ—Å—É—Ä—Å–æ–≤!"
    
    read -p "–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å? (y/N): " -n 1 -r
    echo
    if [[ $REPLY =~ ^[Yy]$ ]]; then
        act workflow_dispatch -W .github/workflows/build-windows.yml \
            --input vscode_arch=x64 \
            --verbose
    fi
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–ø—É—Å–∫–∞ manual-build workflow
run_manual_build() {
    echo "üèóÔ∏è  –ó–∞–ø—É—Å–∫ manual-build workflow..."
    echo "–í—ã–±–µ—Ä–∏—Ç–µ –ø–ª–∞—Ç—Ñ–æ—Ä–º—É:"
    echo "1. windows"
    echo "2. macos" 
    echo "3. linux"
    
    read -p "–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä (1-3): " platform_choice
    
    case $platform_choice in
        1) platform="windows" ;;
        2) platform="macos" ;;
        3) platform="linux" ;;
        *) echo "‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä"; return ;;
    esac
    
    echo "–í—ã–±–µ—Ä–∏—Ç–µ –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä—É:"
    echo "1. x64"
    echo "2. arm64"
    
    read -p "–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä (1-2): " arch_choice
    
    case $arch_choice in
        1) architecture="x64" ;;
        2) architecture="arm64" ;;
        *) echo "‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä"; return ;;
    esac
    
    echo "üèóÔ∏è  –ó–∞–ø—É—Å–∫ —Å–±–æ—Ä–∫–∏ –¥–ª—è $platform ($architecture)..."
    echo "‚ö†Ô∏è  –í–Ω–∏–º–∞–Ω–∏–µ: —ç—Ç–æ –º–æ–∂–µ—Ç –∑–∞–Ω—è—Ç—å –º–Ω–æ–≥–æ –≤—Ä–µ–º–µ–Ω–∏ –∏ —Ä–µ—Å—É—Ä—Å–æ–≤!"
    
    read -p "–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å? (y/N): " -n 1 -r
    echo
    if [[ $REPLY =~ ^[Yy]$ ]]; then
        act workflow_dispatch -W .github/workflows/manual-build.yml \
            --input platform="$platform" \
            --input architecture="$architecture" \
            --input skip_compile=false \
            --verbose
    fi
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–∫–∞–∑–∞ –≤—Å–µ—Ö workflows
list_workflows() {
    echo "üìã –í—Å–µ workflows –≤ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–∏:"
    act -l
}

# –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
while true; do
    echo
    show_workflows
    echo
    read -p "–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ (1-4): " choice
    
    case $choice in
        1)
            run_build_windows
            ;;
        2)
            run_manual_build
            ;;
        3)
            list_workflows
            ;;
        4)
            echo "üëã –î–æ —Å–≤–∏–¥–∞–Ω–∏—è!"
            exit 0
            ;;
        *)
            echo "‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞."
            ;;
    esac
done
