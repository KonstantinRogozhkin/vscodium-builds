name: Manual Build

on:
  workflow_dispatch:
    inputs:
      platform:
        description: 'Platform to build'
        required: true
        default: 'windows'
        type: choice
        options:
          - windows
          - macos
          - linux
      architecture:
        description: 'Architecture to build'
        required: true
        default: 'x64'
        type: choice
        options:
          - x64
          - arm64
      skip_compile:
        description: 'Skip compilation step (use existing artifact)'
        required: false
        default: false
        type: boolean

env:
  APP_NAME: VSCodium
  BINARY_NAME: codium
  VSCODE_QUALITY: stable

jobs:
  compile:
    if: ${{ !inputs.skip_compile }}
    runs-on: ubuntu-22.04
    env:
      OS_NAME: ${{ inputs.platform }}
      VSCODE_ARCH: 'x64'
    outputs:
      BUILD_SOURCEVERSION: ${{ env.BUILD_SOURCEVERSION }}

    steps:
      - uses: actions/checkout@v5

      - name: Setup Node.js environment
        uses: actions/setup-node@v4
        with:
          node-version: '22.15.1'

      - name: Setup Python 3
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          sudo apt-get update -y
          sudo apt-get install -y libkrb5-dev build-essential

      - name: Clone VSCode repo
        run: ./get_repo.sh

      - name: Build
        env:
          SHOULD_BUILD: 'yes'
          SHOULD_BUILD_REH: 'no'
          SHOULD_BUILD_REH_WEB: 'no'
        run: ./build.sh

      - name: Compress vscode artifact
        run: |
          find vscode -type f -not -path "*/node_modules/*" -not -path "vscode/.build/node/*" -not -path "vscode/.git/*" > vscode.txt
          echo "vscode/.build/extensions/node_modules" >> vscode.txt
          echo "vscode/.git" >> vscode.txt
          tar -czf vscode.tar.gz -T vscode.txt

      - name: Upload vscode artifact
        uses: actions/upload-artifact@v4
        with:
          name: vscode-compiled
          path: ./vscode.tar.gz
          retention-days: 7

  build-windows:
    if: ${{ inputs.platform == 'windows' }}
    needs: [compile]
    runs-on: windows-2022
    defaults:
      run:
        shell: bash
    env:
      OS_NAME: windows
      VSCODE_ARCH: ${{ inputs.architecture }}
      SHOULD_BUILD: 'yes'
      VSCODE_QUALITY: stable

    steps:
      - uses: actions/checkout@v5

      - name: Setup Node.js environment
        uses: actions/setup-node@v4
        with:
          node-version: '22.15.1'

      - name: Setup Python 3
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Download vscode artifact
        uses: actions/download-artifact@v4
        with:
          name: vscode-compiled
        if: ${{ !inputs.skip_compile }}

      - name: Extract vscode artifact
        run: tar -xzf vscode.tar.gz
        if: ${{ !inputs.skip_compile }}

      - name: Get version info
        run: |
          cd vscode
          echo "MS_TAG=$(cat .yarnrc | grep target | cut -d'"' -f4)" >> $GITHUB_ENV
          echo "RELEASE_VERSION=$(node -p "require('./package.json').version")" >> $GITHUB_ENV
        if: ${{ !inputs.skip_compile }}

      - name: Build Windows package
        env:
          SHOULD_BUILD: 'yes'
          npm_config_arch: ${{ inputs.architecture }}
          npm_config_target_arch: ${{ inputs.architecture }}
        run: ./build/windows/package.sh

      - name: Prepare assets
        run: ./prepare_assets.sh

      - name: Upload Windows build
        uses: actions/upload-artifact@v4
        with:
          name: vscodium-windows-${{ inputs.architecture }}-${{ github.run_number }}
          path: |
            assets/*.exe
            assets/*.msi
            assets/*.zip
            assets/*.sha256
          retention-days: 30

  build-macos:
    if: ${{ inputs.platform == 'macos' }}
    needs: [compile]
    runs-on: macos-14
    env:
      OS_NAME: osx
      VSCODE_ARCH: ${{ inputs.architecture }}

    steps:
      - uses: actions/checkout@v5

      - name: Setup Node.js environment
        uses: actions/setup-node@v4
        with:
          node-version: '22.15.1'

      - name: Setup Python 3
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Download vscode artifact
        uses: actions/download-artifact@v4
        with:
          name: vscode-compiled
        if: ${{ !inputs.skip_compile }}

      - name: Extract vscode artifact
        run: tar -xzf vscode.tar.gz
        if: ${{ !inputs.skip_compile }}

      - name: Build macOS package
        env:
          SHOULD_BUILD: 'yes'
        run: ./build.sh

      - name: Prepare assets
        run: ./prepare_assets.sh

      - name: Upload macOS build
        uses: actions/upload-artifact@v4
        with:
          name: vscodium-macos-${{ inputs.architecture }}-${{ github.run_number }}
          path: |
            assets/*.dmg
            assets/*.zip
            assets/*.sha256
          retention-days: 30

  build-linux:
    if: ${{ inputs.platform == 'linux' }}
    needs: [compile]
    runs-on: ubuntu-22.04
    env:
      OS_NAME: linux
      VSCODE_ARCH: ${{ inputs.architecture }}

    steps:
      - uses: actions/checkout@v5

      - name: Setup Node.js environment
        uses: actions/setup-node@v4
        with:
          node-version: '22.15.1'

      - name: Setup Python 3
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          sudo apt-get update -y
          sudo apt-get install -y libkrb5-dev libxss1 libasound2-dev libdrm2 libxkbfile-dev libgtk-3-dev libxss1

      - name: Download vscode artifact
        uses: actions/download-artifact@v4
        with:
          name: vscode-compiled
        if: ${{ !inputs.skip_compile }}

      - name: Extract vscode artifact
        run: tar -xzf vscode.tar.gz
        if: ${{ !inputs.skip_compile }}

      - name: Build Linux package
        env:
          SHOULD_BUILD: 'yes'
        run: ./build.sh

      - name: Prepare assets
        run: ./prepare_assets.sh

      - name: Upload Linux build
        uses: actions/upload-artifact@v4
        with:
          name: vscodium-linux-${{ inputs.architecture }}-${{ github.run_number }}
          path: |
            assets/*.deb
            assets/*.rpm
            assets/*.tar.gz
            assets/*.AppImage
            assets/*.sha256
          retention-days: 30
