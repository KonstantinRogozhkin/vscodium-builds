# –£–ø—Ä–æ—â–µ–Ω–Ω—ã–π —Å–∫—Ä–∏–ø—Ç —Å–±–æ—Ä–∫–∏ VSCodium –¥–ª—è Windows
# –¢—Ä–µ–±—É–µ—Ç –ø—Ä–µ–¥—É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—ã—Ö: Node.js, Git, Python, Visual Studio Build Tools

param(
    [string]$Architecture = "x64",  # x64 –∏–ª–∏ arm64
    [string]$Quality = "stable"     # stable –∏–ª–∏ insider
)

Write-Host "üöÄ –£–ø—Ä–æ—â–µ–Ω–Ω–∞—è —Å–±–æ—Ä–∫–∞ VSCodium –¥–ª—è Windows" -ForegroundColor Green
Write-Host "–ê—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞: $Architecture" -ForegroundColor Yellow
Write-Host "–ö–∞—á–µ—Å—Ç–≤–æ: $Quality" -ForegroundColor Yellow

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∫–æ–º–∞–Ω–¥—ã
function Test-Command {
    param([string]$Command)
    try {
        Get-Command $Command -ErrorAction Stop | Out-Null
        return $true
    } catch {
        return $false
    }
}

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏
Write-Host "üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏..." -ForegroundColor Blue

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç–∏ –∫ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—ã–º –ø—Ä–æ–≥—Ä–∞–º–º–∞–º
$env:PATH += ";C:\Program Files\nodejs"
$env:PATH += ";C:\Program Files\Git\bin"
$env:PATH += ";C:\Python311"
$env:PATH += ";C:\Python311\Scripts"

$dependencies = @("git")
$missing = @()

foreach ($dep in $dependencies) {
    if (Test-Command $dep) {
        try {
            $version = & $dep --version 2>$null
            Write-Host "‚úÖ $dep`: $version" -ForegroundColor Green
        } catch {
            Write-Host "‚úÖ $dep`: —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω" -ForegroundColor Green
        }
    } else {
        Write-Host "‚ùå $dep`: –Ω–µ –Ω–∞–π–¥–µ–Ω" -ForegroundColor Red
        $missing += $dep
    }
}

if ($missing.Count -gt 0) {
    Write-Host "‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏: $($missing -join ', ')" -ForegroundColor Red
    Write-Host "–£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –∏—Ö –∏ –ø–æ–≤—Ç–æ—Ä–∏—Ç–µ –ø–æ–ø—ã—Ç–∫—É." -ForegroundColor Yellow
    return
}

# –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
Write-Host "üîß –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è..." -ForegroundColor Blue

$env:APP_NAME = "VSCodium"
$env:BINARY_NAME = "codium"
$env:OS_NAME = "windows"
$env:VSCODE_ARCH = $Architecture
$env:VSCODE_QUALITY = $Quality
$env:CI_BUILD = "no"
$env:SHOULD_BUILD = "yes"
$env:NODE_OPTIONS = "--max-old-space-size=8192"

Write-Host "‚úÖ –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã" -ForegroundColor Green

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –∏—Å—Ö–æ–¥–Ω–æ–≥–æ –∫–æ–¥–∞
if (-not (Test-Path "vscode")) {
    Write-Host "üì• –ò—Å—Ö–æ–¥–Ω—ã–π –∫–æ–¥ VSCode –Ω–µ –Ω–∞–π–¥–µ–Ω. –ü–æ–ª—É—á–∞–µ–º..." -ForegroundColor Blue
    
    # –ü–æ–ª—É—á–∞–µ–º —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π
    if (Test-Path "get_repo.sh") {
        Write-Host "üì¶ –ó–∞–ø—É—Å–∫–∞–µ–º get_repo.sh..." -ForegroundColor Blue
        & bash -c "./get_repo.sh"
        if ($LASTEXITCODE -ne 0) {
            Write-Host "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è" -ForegroundColor Red
            return
        }
    } else {
        Write-Host "‚ùå get_repo.sh –Ω–µ –Ω–∞–π–¥–µ–Ω" -ForegroundColor Red
        return
    }
}

# –ü–æ–¥–≥–æ—Ç–∞–≤–ª–∏–≤–∞–µ–º VSCode
if (Test-Path "prepare_vscode.sh") {
    Write-Host "üîß –ü–æ–¥–≥–æ—Ç–∞–≤–ª–∏–≤–∞–µ–º VSCode..." -ForegroundColor Blue
    & bash -c "./prepare_vscode.sh"
    if ($LASTEXITCODE -ne 0) {
        Write-Host "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–¥–≥–æ—Ç–æ–≤–∫–µ VSCode" -ForegroundColor Red
        return
    }
} else {
    Write-Host "‚ùå prepare_vscode.sh –Ω–µ –Ω–∞–π–¥–µ–Ω" -ForegroundColor Red
    return
}

# –ó–∞–ø—É—Å–∫–∞–µ–º —Å–±–æ—Ä–∫—É
if (Test-Path "build.sh") {
    Write-Host "üî® –ó–∞–ø—É—Å–∫–∞–µ–º —Å–±–æ—Ä–∫—É..." -ForegroundColor Blue
    & bash -c "./build.sh"
    
    if ($LASTEXITCODE -eq 0) {
        Write-Host "üéâ –°–±–æ—Ä–∫–∞ VSCodium –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!" -ForegroundColor Green
        Write-Host "–†–µ–∑—É–ª—å—Ç–∞—Ç—ã —Å–±–æ—Ä–∫–∏ –Ω–∞—Ö–æ–¥—è—Ç—Å—è –≤ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏—Ö –ø–∞–ø–∫–∞—Ö." -ForegroundColor Yellow
    } else {
        Write-Host "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–±–æ—Ä–∫–µ VSCodium" -ForegroundColor Red
        Write-Host "–ö–æ–¥ –æ—à–∏–±–∫–∏: $LASTEXITCODE" -ForegroundColor Yellow
    }
} else {
    Write-Host "‚ùå build.sh –Ω–µ –Ω–∞–π–¥–µ–Ω" -ForegroundColor Red
    return
}
